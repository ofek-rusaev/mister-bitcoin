{"version":3,"sources":["services/UserService.js","services/BitcoinService.js","cmps/MoveList.jsx","pages/HomePage.jsx","services/ContactService.js","cmps/ContactPreview.jsx","cmps/ContactList.jsx","cmps/ContactFilter.jsx","pages/ContactPage.jsx","pages/StatisticPage.jsx","actions/ContactActions.js","cmps/TransferFund.jsx","pages/ContactDetails.jsx","pages/ContactEdit.jsx","pages/SignupPage.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","store/reducers/ContactReducer.js","store/index.js","index.js"],"names":["currUser","name","coins","moves","UserService","getUser","userFromStorage","localStorage","getItem","signup","username","setItem","logout","addMove","contact","amount","move","toId","_id","to","at","Date","now","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","console","log","unshift","a","axios","get","rate","data","BitcoinService","getRate","props","movesToRender","movesList","slice","className","style","marginBottom","title","map","key","length","onClick","onShowTrxHistory","HomePage","state","user","handleLogout","history","push","showTrxHistory","Promise","all","results","this","setState","setTitle","src","avatarImg","alt","MoveList","Component","contacts","sort","arr","b","toLocaleLowerCase","_addContact","resolve","reject","txt","possible","i","charAt","Math","floor","random","_makeId","filter","term","includes","phone","email","ContactService","getContacts","filterBy","contactsToReturn","getContactById","id","find","JSON","parse","stringify","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","getEmptyContact","height","borderRadius","marginLeft","backgroundColor","ContactPreview","ContactFilter","onChangeHandler","ev","target","value","onFilter","type","placeholder","onChange","ContactPage","loadContacts","onFilterHandler","prevState","ContactList","StatisticPage","loadContactById","dispatch","isEdit","TransferFund","msg","handleChange","transferFunds","preventDefault","onSubmit","ContactDetails","onGoBackClickHandler","go","deleteClickHandler","loadContact","match","params","prevProps","mapDispatchToProps","connect","currContact","ContactEdit","htmlFor","SignupPage","activeClassName","exact","createBrowserHistory","App","NavBar","path","component","Boolean","window","location","hostname","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03e5783b.chunk.js","sourcesContent":["const KEY = 'USER';\r\n\r\nvar currUser = {\r\n    name: \"Ochoa Hyde\",\r\n    coins: 100,\r\n    moves: []\r\n}\r\n\r\nfunction getUser() {\r\n    let userFromStorage = localStorage.getItem(KEY);\r\n    if (userFromStorage !== currUser.name) {\r\n        return currUser = {\r\n            name: userFromStorage,\r\n            coins: 100,\r\n            moves: [],\r\n        }\r\n    }\r\n    return currUser;\r\n}\r\n\r\nfunction signup(username) {\r\n    localStorage.setItem(KEY, username);\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.setItem(KEY, '');\r\n}\r\n\r\nfunction addMove(contact, amount) {\r\n    if (currUser.coins - amount >= 0) {\r\n        let move =\r\n        {\r\n            toId: contact._id,\r\n            to: contact.name,\r\n            at: Date.now(),\r\n            amount: amount\r\n        }\r\n        move.at = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(move.at)\r\n        console.log('addMove - move: ', move);\r\n        currUser.moves.unshift(move);\r\n        console.log('addMove - currUser: ', currUser);\r\n        currUser.coins -= amount;\r\n        return 'Transaction completed';\r\n    } else {\r\n        return 'No sufficient funds';\r\n    }\r\n\r\n}\r\nexport const UserService = {\r\n    getUser,\r\n    signup,\r\n    logout,\r\n    addMove\r\n}","import axios from 'axios';\r\n\r\nasync function getRate() {\r\n    const rate = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1');\r\n    return rate.data;\r\n}\r\n\r\n// async function getMarketPrice() {\r\n\r\n// }\r\n\r\n// async function getConfirmedTransactions() {\r\n\r\n// }\r\n\r\nexport const BitcoinService = {\r\n    getRate,\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n    const movesToRender = props.movesList.slice(0, 3);\r\n    const moveListStyle = {\r\n        marginBottom: \"15px\"\r\n    }\r\n\r\n    return (\r\n        (props.movesList) ? (\r\n\r\n            <div className=\"move-list\" style={moveListStyle}>\r\n                <h6>{props.title}</h6>\r\n\r\n                {movesToRender.map((move) => (\r\n                    <div className=\"move-list-item\" key={move.at}>\r\n                        <p>To: <span>{move.to}</span></p>\r\n                        <p>At: <span>{move.at}</span></p>\r\n                        <p>Amount: <span>{move.amount} Coins</span></p>\r\n                    </div>\r\n                    // <Link to={'contact/' + contact._id} key={contact._id}>\r\n                    // <ContactPreview contact={contact} />\r\n                    // </Link>\r\n                ))}\r\n                {props.movesList.length > 3 && <button onClick={props.onShowTrxHistory}>All Transaction</button>}\r\n            </div>\r\n        ) : (\r\n                <div>\r\n                    <h6>{props.title}</h6>\r\n                </div>\r\n            )\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport { UserService } from '../services/UserService';\r\nimport { BitcoinService } from '../services/BitcoinService';\r\nimport MoveList from '../cmps/MoveList';\r\n\r\nexport default class HomePage extends Component {\r\n    state = {\r\n        user: null,\r\n        rate: null,\r\n        title: ''\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const results = await Promise.all([UserService.getUser(), BitcoinService.getRate()]);\r\n        const [user, rate] = results;\r\n        if (!user.name) {\r\n            this.props.history.push('/signup');\r\n        }\r\n        // const user = await UserService.getUser();\r\n        // const rate = await BitcoinService.getRate();\r\n        this.setState({ user, rate });\r\n        this.setTitle();\r\n    };\r\n\r\n    setTitle() {\r\n        if (this.state.user) {\r\n            if (this.state.user.moves.length) {\r\n                this.setState({ title: 'Your last 3 transactions:' })\r\n            } else {\r\n                this.setState({ title: 'You have no transactions at the moment' })\r\n            }\r\n        }\r\n    }\r\n    get avatarImg() {\r\n        return `https://robohash.org/${this.state.user.name}.png`\r\n    };\r\n\r\n    handleLogout = () => {\r\n        UserService.logout();\r\n        this.props.history.push('/signup');\r\n    }\r\n\r\n    showTrxHistory = () => {\r\n        console.log('shoe history');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.state.user) ?\r\n                (\r\n                    <div className=\"user-msg container white-text\">\r\n                        <section>\r\n                            <img\r\n                                src={this.avatarImg}\r\n                                alt=\"\"\r\n                            />\r\n                            <h4>{this.state.user.name}, welcome back!</h4>\r\n                        </section>\r\n                        <h5>You have {this.state.user.coins} coins.</h5>\r\n                        <h5>Current coin rate: {this.state.rate}</h5>\r\n                        <hr />\r\n                        <MoveList title={this.state.title} movesList={this.state.user.moves} onShowTrxHistory={this.showTrxHistory} />\r\n\r\n                        <button onClick={this.handleLogout}>Logout</button>\r\n                    </div>\r\n                )\r\n                : (<div className=\"white-text\">Please login first...</div>)\r\n        )\r\n    }\r\n}","const contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id)\n    contact ? resolve(JSON.parse(JSON.stringify(contact))) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\nexport const ContactService = {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import React from 'react';\r\n\r\nexport default ({ contact }) => {\r\n    const imgStyle = {\r\n        height: '50px',\r\n        borderRadius: '50%'\r\n    };\r\n\r\n    const h5Style = {\r\n        marginLeft: '-111px'\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-preview white-text\" key={contact._id}>\r\n            <img\r\n                style={imgStyle}\r\n                src={`https://robohash.org/${contact.name}.png`}\r\n                alt=\"\"\r\n            />\r\n            <h5 style={h5Style}>\r\n                {contact.name}\r\n            </h5>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ContactPreview from './ContactPreview';\r\n\r\nexport default (props) => {\r\n    const contactListStyle = {\r\n        backgroundColor: \"rgba(43, 23, 1, 0.5)\",\r\n        // padding: \"30px\",\r\n    }\r\n    return (\r\n        <div className=\"contact-list\" style={contactListStyle}>\r\n            {props.contacts && props.contacts.map((contact) => (\r\n                <Link to={'contact/' + contact._id} key={contact._id}>\r\n                    <ContactPreview contact={contact} />\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ContactFilter extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...props.filterBy };\r\n        // CANT setState IN ctor\r\n        // this.setState({ ...props.filterBy });\r\n    };\r\n\r\n    onChangeHandler = (ev) => {\r\n        const { value, name } = ev.target;\r\n        this.setState({ [name]: value }, () => {\r\n            this.props.onFilter({ ...this.state });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contact-filter white-text\">\r\n                <form>\r\n                    <input type=\"text\"\r\n                        placeholder=\" Search Contact Name\"\r\n                        onChange={this.onChangeHandler}\r\n                        name=\"term\"\r\n                        value={this.state.term}\r\n                    />\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ContactService } from '../services/ContactService';\r\n\r\nimport ContactList from '../cmps/ContactList';\r\nimport ContactFilter from '../cmps/ContactFilter';\r\n\r\nexport default class ContactPage extends Component {\r\n    state = {\r\n        filterBy: {\r\n            term: ''\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.loadContacts();\r\n    };\r\n\r\n    loadContacts = async () => {\r\n        const contacts = await ContactService.getContacts(this.state.filterBy);\r\n        this.setState({ contacts });\r\n    };\r\n\r\n    onFilterHandler = (filterBy) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                filterBy: {\r\n                    ...prevState.filterBy,\r\n                    ...filterBy\r\n                }\r\n            };\r\n        }, this.loadContacts);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/contact/edit\"><button>Add Contact</button></Link>\r\n                <ContactFilter\r\n                    filterBy={this.state.filterBy}\r\n                    onFilter={this.onFilterHandler}\r\n                />\r\n                <ContactList contacts={this.state.contacts} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import BitcoinService from '../services/BitcoinService';\r\n\r\n\r\n//  react-google-charts\r\n\r\nexport default class StatisticPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"statistic-page white-text\">\r\n                <h4>Market Price (USD)</h4>\r\n                <p>Average USD market price across major bitcoin exchanges.</p>\r\n                <hr />\r\n                <h4>Confirmed Transactions Per Day</h4>\r\n                <p>The number of daily confirmed Bitcoin transactions.</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy) {\r\n    return async dispatch => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        dispatch({ type: 'SET_CONTACTS', contacts })\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        const contact = await ContactService.getContactById(id);\r\n        dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { UserService } from '../services/UserService';\r\n\r\nexport default class TransferFund extends Component {\r\n    state = {\r\n        contact: null,\r\n        amount: 0,\r\n        msg: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.contact = { ...props.contact };\r\n    };\r\n\r\n    handleChange = (ev) => {\r\n        const { name, value } = ev.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    transferFunds = (ev) => {\r\n        ev.preventDefault();\r\n        const { contact, amount } = this.state;\r\n        const msg = UserService.addMove(contact, amount);\r\n        this.setState({ msg })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Transfer coins to {this.props.contact.name}: </h5>\r\n                <form onSubmit={this.transferFunds}>\r\n                    <label>\r\n                        Amount:\r\n                        <input type=\"number\"\r\n                            // onChange={this.props.onTransferFund}\r\n                            onChange={this.handleChange}\r\n                            name=\"amount\"\r\n                            value={this.state.amount}\r\n                        />\r\n                        <button>Transfer</button>\r\n                    </label>\r\n                    <p>{this.state.msg}</p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n// import { ContactService } from '../services/ContactService';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadContactById, saveContact, deleteContact } from '../actions/ContactActions';\r\n\r\nimport TransferFund from '../cmps/TransferFund';\r\n\r\nclass ContactDetails extends Component {\r\n    async componentDidMount() {\r\n        this.loadContact();\r\n    };\r\n\r\n    loadContact() {\r\n        const id = this.props.match.params.id;\r\n        this.props.loadContactById(id);\r\n    };\r\n\r\n    onGoBackClickHandler = (ev) => {\r\n        this.props.history.go(-1);\r\n    };\r\n\r\n    deleteClickHandler = async () => {\r\n        await this.props.deleteContact(this.props.contact._id);\r\n        this.props.history.push('/contact');\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // for watching a change in match params to reload the contact if needed\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.loadContact();\r\n        }\r\n        // for handling changes without componentDidMount\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // KEEP IN MIND:\r\n        // set currContact in store to null ?\r\n    };\r\n\r\n    render() {\r\n        const { contact } = this.props;\r\n\r\n        if (!contact) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const imgStyle = {\r\n            height: '100px',\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Link to={`/contact/edit/${this.props.contact._id}`}>\r\n                    <button>Edit</button>\r\n                </Link>\r\n                <button onClick={this.deleteClickHandler}>Delete</button>\r\n                <button onClick={this.onGoBackClickHandler}>Go Back</button>\r\n                <div className=\"contact-details white-text container\">\r\n                    <div className=\"contact-details-main\">\r\n\r\n                        <img\r\n                            style={imgStyle}\r\n                            src={`https://robohash.org/${contact.name}.png`}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{contact.name}</h4>\r\n                    </div>\r\n                    <p>Phone: {contact.phone}</p>\r\n                    <p>Email: {contact.email}</p>\r\n                    <hr />\r\n\r\n                    <TransferFund contact={contact} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContactById,\r\n    saveContact,\r\n    deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadContactById, saveContact } from '../actions/ContactActions';\r\nimport { ContactService } from '../services/ContactService';\r\n\r\nclass ContactEdit extends Component {\r\n    state = {\r\n        contact: ContactService.getEmptyContact()\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        if (id) {\r\n            await this.props.loadContactById(id);\r\n            this.setState({ ...this.props.contact }, () => {\r\n                console.log('this.state', this.state);\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = (ev) => {\r\n        const { value, name } = ev.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault();\r\n        const contact = await this.props.saveContact({ ...this.state });\r\n        this.props.history.push(`/contact/${contact._id}`);\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone } = this.state;\r\n        return (\r\n            <div className=\"contact-edit\">\r\n                <form onSubmit={this.saveContact}>\r\n                    <div>\r\n                        <label htmlFor=\"\">\r\n                            Name:\r\n                            <input type=\"text\"\r\n                                onChange={this.handleChange}\r\n                                value={name}\r\n                                name=\"name\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"\">\r\n                            Email:\r\n                            <input type=\"text\"\r\n                                onChange={this.handleChange}\r\n                                value={email}\r\n                                name=\"email\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"\">\r\n                            Phone:\r\n                            <input type=\"text\"\r\n                                onChange={this.handleChange}\r\n                                value={phone}\r\n                                name=\"phone\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <button>Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contact: state.contact.currContact,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    loadContactById,\r\n    saveContact\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEdit);","import React, { Component } from 'react';\r\nimport { UserService } from '../services/UserService';\r\n\r\nexport default class SignupPage extends Component {\r\n    state = {\r\n        username: ''\r\n    };\r\n\r\n    signup = async (ev) => {\r\n        ev.preventDefault();\r\n        const username = this.state.username\r\n        UserService.signup(username);\r\n        this.props.history.push('/mister-bitcoin');\r\n    };\r\n\r\n    handleChange = (ev) => {\r\n        const { value, name } = ev.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        const { username } = this.state;\r\n        return (\r\n            <div className=\"signup-page white-text\">\r\n                <form onSubmit={this.signup}>\r\n                    <label>Please enter your name:\r\n                    <input\r\n                            onChange={this.handleChange}\r\n                            value={username}\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button>Sign up</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default (props) => {\r\n    const navbarStyle = {\r\n        // position: \"fixed\",\r\n        backgroundColor: \"rgb(43, 23, 1)\",\r\n    }\r\n    return (\r\n        <nav className=\"nav-bar  center\" style={navbarStyle}>\r\n            <NavLink activeClassName=\"active\" exact to=\"/mister-bitcoin\">HOME</NavLink>\r\n            {' '}|{' '}\r\n            <NavLink to=\"/contact\">CONTACTS</NavLink>\r\n            {' '}|{' '}\r\n            <NavLink to=\"/statistic\">STATISTICS</NavLink>\r\n        </nav>\r\n    );\r\n};\r\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport ContactPage from './pages/ContactPage';\nimport StatisticPage from './pages/StatisticPage';\nimport ContactDetails from './pages/ContactDetails';\nimport ContactEdit from './pages/ContactEdit';\nimport SignupPage from './pages/SignupPage';\n\nimport NavBar from './cmps/NavBar';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <NavBar />\n        <main>\n          <Switch>\n            <Route path=\"/mister-bitcoin\" exact component={HomePage} />\n            <Route path=\"/contact\" exact component={ContactPage} />\n            <Route path=\"/contact/edit/:id?\" component={ContactEdit} />\n            <Route path=\"/contact/:id\" component={ContactDetails} />\n            <Route path=\"/statistic\" component={StatisticPage} />\n            <Route path=\"/signup\" component={SignupPage} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':\r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            // debugger;\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport ContactReducer from './reducers/ContactReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: ContactReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}